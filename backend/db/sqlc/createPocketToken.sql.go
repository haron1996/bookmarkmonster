// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: createPocketToken.sql

package db

import (
	"context"
)

const createPocketToken = `-- name: CreatePocketToken :one
insert into pocket_token (access_token, username, user_id)
values ($1, $2, $3)
on conflict (user_id) do update set access_token = excluded.access_token, username = excluded.username
returning access_token, username, user_id
`

type CreatePocketTokenParams struct {
	AccessToken string `json:"access_token"`
	Username    string `json:"username"`
	UserID      string `json:"user_id"`
}

func (q *Queries) CreatePocketToken(ctx context.Context, arg CreatePocketTokenParams) (PocketToken, error) {
	row := q.db.QueryRow(ctx, createPocketToken, arg.AccessToken, arg.Username, arg.UserID)
	var i PocketToken
	err := row.Scan(&i.AccessToken, &i.Username, &i.UserID)
	return i, err
}
