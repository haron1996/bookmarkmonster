// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: createUser.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUser = `-- name: CreateUser :one
INSERT INTO userr (id, email, name, email_verified, picture, signup_mode, account_password)
VALUES ($1, $2, $3, $4, $5, $6, $7)
RETURNING id, name, email, email_verified, picture, account_password, created_at, last_login, refresh_token, deleted, signup_mode
`

type CreateUserParams struct {
	ID              string      `json:"id"`
	Email           string      `json:"email"`
	Name            string      `json:"name"`
	EmailVerified   bool        `json:"email_verified"`
	Picture         pgtype.Text `json:"picture"`
	SignupMode      SignupMode  `json:"signup_mode"`
	AccountPassword pgtype.Text `json:"account_password"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (Userr, error) {
	row := q.db.QueryRow(ctx, createUser,
		arg.ID,
		arg.Email,
		arg.Name,
		arg.EmailVerified,
		arg.Picture,
		arg.SignupMode,
		arg.AccountPassword,
	)
	var i Userr
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.EmailVerified,
		&i.Picture,
		&i.AccountPassword,
		&i.CreatedAt,
		&i.LastLogin,
		&i.RefreshToken,
		&i.Deleted,
		&i.SignupMode,
	)
	return i, err
}
