// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: getFullpageScreenshots.sql

package db

import (
	"context"
)

const getFullpageScreenshots = `-- name: GetFullpageScreenshots :many
select id, screenshot_location, bookmark_id, user_id, added, deleted, fullpage from bookmark_screenshots where user_id = $1 and fullpage = 'true' and deleted is null order by added desc
`

func (q *Queries) GetFullpageScreenshots(ctx context.Context, userID string) ([]BookmarkScreenshot, error) {
	rows, err := q.db.Query(ctx, getFullpageScreenshots, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []BookmarkScreenshot{}
	for rows.Next() {
		var i BookmarkScreenshot
		if err := rows.Scan(
			&i.ID,
			&i.ScreenshotLocation,
			&i.BookmarkID,
			&i.UserID,
			&i.Added,
			&i.Deleted,
			&i.Fullpage,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
