// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: getRootBookmarks.sql

package db

import (
	"context"
)

const getUserRootBookmarks = `-- name: GetUserRootBookmarks :many
select id, title, bookmark, host, favicon, thumbnail, notes, user_id, added, updated, deleted, folder_id, beautified, fromchrome from bookmark where user_id = $1 and folder_id is null and deleted is null order by (added) desc
`

func (q *Queries) GetUserRootBookmarks(ctx context.Context, userID string) ([]Bookmark, error) {
	rows, err := q.db.Query(ctx, getUserRootBookmarks, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Bookmark{}
	for rows.Next() {
		var i Bookmark
		if err := rows.Scan(
			&i.ID,
			&i.Title,
			&i.Bookmark,
			&i.Host,
			&i.Favicon,
			&i.Thumbnail,
			&i.Notes,
			&i.UserID,
			&i.Added,
			&i.Updated,
			&i.Deleted,
			&i.FolderID,
			&i.Beautified,
			&i.Fromchrome,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
